'use strict';

/**
 * Properties and methods of the Playlist Entity
 *
 * @see https://developer.spotify.com/web-api/object-model/#playlist-object-full
 */
Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var PlaylistEntity = (function () {

  /**
   * Constructor
   *
   * @param {Object} data Playlist object
   */

  function PlaylistEntity() {
    var data = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    _classCallCheck(this, PlaylistEntity);

    this._collaborative = data.collaborative;
    this._description = data.description;
    this._external_urls = data.external_urls;
    this._followers = data.followers;
    this._href = data.href;
    this._id = data.id;
    this._images = data.images;
    this._name = data.name;
    this._owner = data.owner;
    this._public = data['public'];
    this._snapshot_id = data.snapshot_id;
    this._tracks = data.tracks;
    this._type = data.type;
    this._uri = data.uri;
  }

  /**
   * Exports the AlbumEntity class.
   */

  /**
   * @param {Object} data Playlist object
   */

  _createClass(PlaylistEntity, [{
    key: 'collaborative',
    set: function set(data) {
      this._collaborative = data;
    },

    /**
     * @return {String} Playlist collaborative
     */
    get: function get() {
      return this._collaborative;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'description',
    set: function set(data) {
      this._description = data;
    },

    /**
     * @return {String} Playlist description
     */
    get: function get() {
      return this._description;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'external_urls',
    set: function set(data) {
      this._external_urls = data;
    },

    /**
     * @return {String} Playlist external_urls
     */
    get: function get() {
      return this._external_urls;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'followers',
    set: function set(data) {
      this._followers = data;
    },

    /**
     * @return {String} Playlist followers
     */
    get: function get() {
      return this._followers;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'href',
    set: function set(data) {
      this._href = data;
    },

    /**
     * @return {String} Playlist href
     */
    get: function get() {
      return this._href;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'id',
    set: function set(data) {
      this._id = data;
    },

    /**
     * @return {Playlist} Album id
     */
    get: function get() {
      return this._id;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'images',
    set: function set(data) {
      this._images = data;
    },

    /**
     * @return {String} Playlist images
     */
    get: function get() {
      return this._images;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'name',
    set: function set(data) {
      this._name = data;
    },

    /**
     * @return {String} Playlist name
     */
    get: function get() {
      return this._name;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'owner',
    set: function set(data) {
      this._owner = data;
    },

    /**
     * @return {String} Playlist owner
     */
    get: function get() {
      return this._owner;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'public',
    set: function set(data) {
      this._public = data;
    },

    /**
     * @return {String} Playlist public
     */
    get: function get() {
      return this._public;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'snapshot_id',
    set: function set(data) {
      this._snapshot_id = data;
    },

    /**
     * @return {String} Playlist snapshot_id
     */
    get: function get() {
      return this._snapshot_id;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'tracks',
    set: function set(data) {
      this._tracks = data;
    },

    /**
     * @return {String} Playlist tracks
     */
    get: function get() {
      return this._tracks;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'type',
    set: function set(data) {
      this._type = data;
    },

    /**
     * @return {String} Entity type
     */
    get: function get() {
      return this._type;
    }

    /**
     * @param {Object} data Playlist object
     */
  }, {
    key: 'uri',
    set: function set(data) {
      this._uri = data;
    },

    /**
     * @return {Playlist} Album uri
     */
    get: function get() {
      return this._uri;
    }
  }]);

  return PlaylistEntity;
})();

exports['default'] = PlaylistEntity;
module.exports = exports['default'];